@model QCapp.Models.Company

@{
    ViewData["Title"] = "Add Company";
    Layout = null;
}

<span class="section">@ViewBag.Title</span>
<form id="quickForm" asp-action="Create" enctype="multipart/form-data" method="post" novalidate>

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyName)<span class="required">*</span></label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control" name="@Html.NameFor(model => model.CompanyName)" placeholder="" required="required" />
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyCode)</label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control" name="@Html.NameFor(model => model.CompanyCode)" placeholder="" />
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressLine1)</label>
        <div class="col-md-6 col-sm-6">
            <textarea class="form-control" name="@Html.NameFor(model => model.CompanyAddressLine1)" placeholder=""></textarea>
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressLine2)</label>
        <div class="col-md-6 col-sm-6">
            <textarea class="form-control" name="@Html.NameFor(model => model.CompanyAddressLine2)" placeholder=""></textarea>
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressCountry)</label>
        <div class="col-md-6 col-sm-6">
            @Html.DropDownListFor(model => model.CompanyAddressCountry, ViewBag.Country as SelectList, "Choose..", new { @class = "form-control" })
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressState)</label>
        <div class="col-md-6 col-sm-6">
            @Html.DropDownListFor(model => model.CompanyAddressState, new SelectList(new List<string>()), "Choose..", new { @class = "form-control" })
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressCity)</label>
        <div class="col-md-6 col-sm-6">
            @Html.DropDownListFor(model => model.CompanyAddressCity, new SelectList(new List<string>()), "Choose..", new { @class = "form-control" })
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyAddressZip)</label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control" name="@Html.NameFor(model => model.CompanyAddressZip)" placeholder="" />
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.CompanyEmailAddress)</label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control email" name="@Html.NameFor(model => model.CompanyEmailAddress)" type="email" />
        </div>
    </div>

    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAdressSameAsCompany)</label>
        <div class="col-md-6 col-sm-6">
            <div class="">
                <label>
                    <input id="@Html.NameFor(model => model.BillingAdressSameAsCompany)" name="@Html.NameFor(model => model.BillingAdressSameAsCompany)" type="checkbox" class="js-switch" checked />
                </label>
            </div>
        </div>
    </div>

    <div id="divBillingAddress">
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressLine1)</label>
            <div class="col-md-6 col-sm-6">
                <textarea class="form-control" name="@Html.NameFor(model => model.BillingAddressLine1)" placeholder=""></textarea>
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressLine2)</label>
            <div class="col-md-6 col-sm-6">
                <textarea class="form-control" name="@Html.NameFor(model => model.BillingAddressLine2)" placeholder=""></textarea>
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressCountry)</label>
            <div class="col-md-6 col-sm-6">
                @Html.DropDownListFor(model => model.BillingAddressCountry, ViewBag.Country as SelectList, "Choose..", new { @class = "form-control" })
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressState)</label>
            <div class="col-md-6 col-sm-6">
                @Html.DropDownListFor(model => model.BillingAddressState, new SelectList(new List<string>()), "Choose..", new { @class = "form-control" })
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressCity)</label>
            <div class="col-md-6 col-sm-6">
                @Html.DropDownListFor(model => model.BillingAddressCity, new SelectList(new List<string>()), "Choose..", new { @class = "form-control" })
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingAddressZip)</label>
            <div class="col-md-6 col-sm-6">
                <input class="form-control" name="@Html.NameFor(model => model.BillingAddressZip)" placeholder="" />
            </div>
        </div>
        <div class="field item form-group">
            <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.BillingEmailAddress)</label>
            <div class="col-md-6 col-sm-6">
                <input class="form-control email" name="@Html.NameFor(model => model.BillingEmailAddress)" type="email" />
            </div>
        </div>
    </div>

    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.ContactName)</label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control" name="@Html.NameFor(model => model.ContactName)" placeholder="" />
        </div>
    </div>
    <div class="field item form-group">
        <label class="col-form-label col-md-3 col-sm-3  label-align">@Html.DisplayNameFor(model => model.ContactPhone)</label>
        <div class="col-md-6 col-sm-6">
            <input class="form-control number" type="number" name="@Html.NameFor(model=>model.ContactPhone)">
        </div>
    </div>

    <div class="ln_solid">
        <div class="form-group">
            <div class="col-md-6 offset-md-3">
                <button type='submit' class="btn btn-primary">Submit</button>
                <button type='reset' class="btn btn-success">Reset</button>
            </div>
        </div>
    </div>

</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<!-- Javascript functions	-->
<script>
    // initialize a validator instance from the "FormValidator" constructor.
    // A "<form>" element is optionally passed as an argument, but is not a must
    var validator = new FormValidator({
        "events": ['blur', 'input', 'change']
    }, document.forms[0]);
    // on form "submit" event
    document.forms[0].onsubmit = function (e) {
        var submit = true,
            validatorResult = validator.checkAll(this);
        console.log(validatorResult);
        return !!validatorResult.valid;
    };
    // on form "reset" event
    document.forms[0].onreset = function (e) {
        validator.reset();
    };
    // stuff related ONLY for this demo page:
    $('.toggleValidationTooltips').change(function () {
        validator.settings.alerts = !this.checked;
        if (this.checked)
            $('form .alert').remove();
    }).prop('checked', false);
</script>

<script>
    // Switchery
    $(document).ready(function () {
        if ($(".js-switch")[0]) {
            var elems = Array.prototype.slice.call(document.querySelectorAll('.js-switch'));
            elems.forEach(function (html) {
                var switchery = new Switchery(html, {
                    color: '#26B99A'
                });
            });
        }
    });
    // /Switchery
</script>

<script>
    $("#@(Html.NameFor(model => model.BillingAdressSameAsCompany))").change(function () {
        if (this.checked) {
            $('#divBillingAddress').hide();
        }
        else {
            $('#divBillingAddress').show();
        }
    });

    $("#@(Html.NameFor(model => model.CompanyAddressCountry))").change(function () {
        var countryId = $(this).val();
        if (countryId > 0) {
            $.ajax({
                type: "GET",
                url: "/Company/GetStatesById/" + countryId,
                success: function (data) {
                    $("#@(Html.NameFor(model => model.CompanyAddressState))").html('');

                    var defaultOption = "<option value>Choose..</option>";
                    $("#@(Html.NameFor(model => model.CompanyAddressState))").append(defaultOption);

                    $.each(data.$values, function (id, option) {
                        console.log(option);
                        var optionHtml = "<option value=" + option.stateId + ">" + option.stateName + "</option>";
                        $("#@(Html.NameFor(model => model.CompanyAddressState))").append(optionHtml);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("/Company/GetStatesById/" + countryId + " failed.");
                }
            });
        } else {
            console.log("Please select a Country.");
        }
    });

    $("#@(Html.NameFor(model => model.CompanyAddressState))").change(function () {
        var stateId = $(this).val();
        if (stateId > 0) {
            $.ajax({
                type: "GET",
                url: "/Company/GetCitiesById/" + stateId,
                success: function (data) {
                    $("#@(Html.NameFor(model => model.CompanyAddressCity))").html('');

                    var defaultOption = "<option value>Choose..</option>";
                    $("#@(Html.NameFor(model => model.CompanyAddressCity))").append(defaultOption);

                    $.each(data.$values, function (id, option) {
                        var optionHtml = "<option value=" + option.cityId + ">" + option.cityName + "</option>";
                        $("#@(Html.NameFor(model => model.CompanyAddressCity))").append(optionHtml);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("/Company/GetCitiesById/" + stateId + " failed.");
                }
            });
        } else {
            console.log("Please select a State.");
        }
    });

    $("#@(Html.NameFor(model => model.BillingAddressCountry))").change(function () {
        var countryId = $(this).val();
        if (countryId > 0) {
            $.ajax({
                type: "GET",
                url: "/Company/GetStatesById/" + countryId,
                success: function (data) {
                    $("#@(Html.NameFor(model => model.BillingAddressState))").html('');

                    var defaultOption = "<option value>Choose..</option>";
                    $("#@(Html.NameFor(model => model.BillingAddressState))").append(defaultOption);

                    $.each(data.$values, function (id, option) {
                        console.log(option);
                        var optionHtml = "<option value=" + option.stateId + ">" + option.stateName + "</option>";
                        $("#@(Html.NameFor(model => model.BillingAddressState))").append(optionHtml);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("/Company/GetStatesById/" + countryId + " failed.");
                }
            });
        } else {
            console.log("Please select a Country.");
        }
    });

    $("#@(Html.NameFor(model => model.BillingAddressState))").change(function () {
        var stateId = $(this).val();
        if (stateId > 0) {
            $.ajax({
                type: "GET",
                url: "/Company/GetCitiesById/" + stateId,
                success: function (data) {
                    $("#@(Html.NameFor(model => model.BillingAddressCity))").html('');

                    var defaultOption = "<option value>Choose..</option>";
                    $("#@(Html.NameFor(model => model.BillingAddressCity))").append(defaultOption);

                    $.each(data.$values, function (id, option) {
                        var optionHtml = "<option value=" + option.cityId + ">" + option.cityName + "</option>";
                        $("#@(Html.NameFor(model => model.BillingAddressCity))").append(optionHtml);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log("/Company/GetCitiesById/" + stateId + " failed.");
                }
            });
        } else {
            console.log("Please select a State.");
        }
    });
</script>

<script type="text/javascript">
    $('#quickForm').submit(function (e) {
        e.preventDefault();

        var formData = new FormData($(this)[0]);
        console.log('formData');
        console.log(formData);

        $.ajax({
            type: 'POST',
            url: '/Company/Create',
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                console.log('success');
                console.log(data);
            },
            error: function (data) {
                console.log('error');
                console.log(data);
            }
        });
    });
</script>